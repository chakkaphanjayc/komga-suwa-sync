# =================================================================
# Proxmox LXC Configuration for Komga-Suwayomi Sync
# =================================================================
# This configuration file can be used to create an LXC container
# optimized for running Docker containers in Proxmox VE
#
# Usage: Copy this content to /etc/pve/lxc/<CTID>.conf
# or use it as a template when creating a new container

# Basic container configuration
arch: amd64
cores: 2
hostname: komga-sync
memory: 2048
net0: name=eth0,bridge=vmbr0,gw=192.168.1.1,hwaddr=02:00:00:00:00:01,ip=192.168.1.100/24,type=veth
ostype: ubuntu
rootfs: local-lvm:vm-100-disk-0,size=20G
swap: 1024

# Enable privileged mode for Docker support
unprivileged: 0

# AppArmor configuration for Docker
lxc.apparmor.profile: lxc-container-default-with-nesting

# Capabilities required for Docker
lxc.cap.drop:
lxc.cap.keep: sys_admin sys_resource sys_ptrace net_bind_service

# Mount Docker socket (optional - for host Docker access)
#lxc.mount.entry: /var/run/docker.sock /var/run/docker.sock none bind,create=file

# Resource limits
lxc.cgroup.memory.limit_in_bytes: 2G
lxc.cgroup.memory.memsw.limit_in_bytes: 3G
lxc.cgroup.cpu.shares: 1024
lxc.cgroup.blkio.weight: 500

# Network configuration
lxc.net.0.type: veth
lxc.net.0.link: vmbr0
lxc.net.0.name: eth0
lxc.net.0.hwaddr: 02:00:00:00:00:01
lxc.net.0.ipv4.address: 192.168.1.100/24
lxc.net.0.ipv4.gateway: 192.168.1.1

# DNS configuration
lxc.net.0.ipv6.address: dhcp
lxc.net.0.ipv6.gateway: auto

# Startup configuration
lxc.start.auto: 1
lxc.start.delay: 5
lxc.start.order: 100

# Console and tty configuration
lxc.tty.max: 4
lxc.console.path: /dev/tty1

# Root filesystem configuration
lxc.rootfs.path: /var/lib/lxc/komga-sync/rootfs
lxc.rootfs.backend: dir

# Mount points for persistent data
lxc.mount.entry: /mnt/pve/komga-data mnt/komga-data none bind,create=dir 0 0

# Environment variables
lxc.environment: DEBIAN_FRONTEND=noninteractive
lxc.environment: LANG=en_US.UTF-8

# Logging
lxc.log.level: INFO
lxc.log.file: /var/log/lxc/komga-sync.log

# Security hardening
lxc.seccomp.profile: /usr/share/lxc/config/common.seccomp
lxc.idmap: u 0 100000 65536
lxc.idmap: g 0 100000 65536

# Additional mounts for Docker
lxc.mount.entry: /sys/fs/cgroup sys/fs/cgroup none bind,ro 0 0
lxc.mount.entry: /proc/sys/net/netfilter proc/sys/net/netfilter none bind,ro 0 0

# =================================================================
# Proxmox VE Host Configuration Notes
# =================================================================
#
# 1. Create the container:
#    pct create 100 local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.xz \
#        --hostname komga-sync \
#        --memory 2048 \
#        --cores 2 \
#        --net0 name=eth0,bridge=vmbr0,gw=192.168.1.1,ip=192.168.1.100/24 \
#        --rootfs local-lvm:20 \
#        --swap 1024 \
#        --unprivileged 0 \
#        --features nesting=1
#
# 2. Copy this configuration to the container config:
#    cp /path/to/this/file /etc/pve/lxc/100.conf
#
# 3. Start the container:
#    pct start 100
#
# 4. Enter the container and run the setup script:
#    pct enter 100
#    curl -fsSL https://raw.githubusercontent.com/chakkaphanjayc/komga-suwa-sync/main/proxmox-lxc-setup.sh | bash
#
# =================================================================
# Network Configuration
# =================================================================
#
# Replace the following with your network settings:
# - vmbr0: Your bridge interface name
# - 192.168.1.1: Your gateway IP
# - 192.168.1.100: Container IP (choose an unused IP)
# - 192.168.1.0/24: Your subnet
#
# =================================================================
# Storage Configuration
# =================================================================
#
# The configuration uses:
# - local-lvm: For root filesystem (adjust storage pool as needed)
# - /mnt/pve/komga-data: Mount point for persistent data
#
# Create the data directory on the host:
# mkdir -p /mnt/pve/komga-data
#
# =================================================================
# Security Considerations
# =================================================================
#
# - Container runs in privileged mode (required for Docker)
# - AppArmor profile allows nesting
# - Resource limits are set to prevent resource exhaustion
# - Network is isolated but accessible
#
# =================================================================
# Troubleshooting
# =================================================================
#
# If Docker fails to start:
# 1. Check AppArmor: aa-status | grep lxc
# 2. Check capabilities: pct enter 100 && capsh --print
# 3. Check kernel modules: lsmod | grep overlay
#
# If networking fails:
# 1. Check bridge: brctl show vmbr0
# 2. Check iptables: iptables -L -n
# 3. Check container logs: pct logs 100
#
# =================================================================
